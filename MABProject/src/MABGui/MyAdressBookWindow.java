/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MABGui;
import static MABGui.HomePage.adressBooks;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.List;
import java.util.ListIterator;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mabproject.AdressBook;
import mabproject.Contact;
import mabproject.LastNameComparator;
import mabproject.PostalCodeComparator;

/**
 *
 * @author mac
 */
public class MyAdressBookWindow extends javax.swing.JFrame {
    String Username;
    String Title;
    DefaultTableModel model;
    static final String [] colnames = {"Name","Adress","City","Postal Code","Phone Number"};
    /**
     * Creates new form MyAdressBookWindow
     */
    public MyAdressBookWindow(String username, String title) {
        Title = title;
        Username = username;
        initComponents();
        model = new DefaultTableModel();
        Table.setModel(model);
        load();
        this.setLocationRelativeTo(null);
    }
     private void loadSortedByLastName (){
        AdressBook valid = adressBooks.FindAdressBookUserTitle(Username, Title);
        LastNameComparator comp = new LastNameComparator();
        valid.SortContactLastName(comp);
        List<Contact> results = valid.getAdressBook(); //results is the list of contacts in the adress Books
        ListIterator<Contact> iter = results.listIterator();
        if (iter.hasNext()) {
            Object[][] data = new Object[results.size()][colnames.length];
            int i = 0;
            while (iter.hasNext()) {
                Contact ct = iter.next();
                System.out.println(ct.getLastName()+" "+ ct.getFirstName());
                data[i][0] = ct.getLastName()+" "+ ct.getFirstName();
                data[i][1] = ct.getAdress();
                data[i][2] = ct.getCity();
                data[i][3] = ct.getPostalCode();
                data[i][4] = ct.getPhoneNumber();
                i++;
            }
            model.setDataVector(data, colnames);
        }
        else {
            model.setDataVector(null, colnames);
        }
    }
      private void loadSortedByPostalCode (){
        AdressBook valid = adressBooks.FindAdressBookUserTitle(Username, Title);
        PostalCodeComparator comp = new PostalCodeComparator();
        valid.SortContactLastName(comp);
        List<Contact> results = valid.getAdressBook(); //results is the list of contacts in the adress Books
        ListIterator<Contact> iter = results.listIterator();
        if (iter.hasNext()) {
            Object[][] data = new Object[results.size()][colnames.length];
            int i = 0;
            while (iter.hasNext()) {
                Contact ct = iter.next();
                System.out.println(ct.getLastName()+" "+ ct.getFirstName());
                data[i][0] = ct.getLastName()+" "+ ct.getFirstName();
                data[i][1] = ct.getAdress();
                data[i][2] = ct.getCity();
                data[i][3] = ct.getPostalCode();
                data[i][4] = ct.getPhoneNumber();
                i++;
            }
            model.setDataVector(data, colnames);
        }
        else {
            model.setDataVector(null, colnames);
        }
    }
    public void load() {
        AdressBook valid = adressBooks.FindAdressBookUserTitle(Username, Title);
        
        List<Contact> results = valid.getAdressBook(); //results is the list of contacts in the adress Books
        ListIterator<Contact> iter = results.listIterator();
        if (iter.hasNext()) {
            Object[][] data = new Object[results.size()][colnames.length];
            int i = 0;
            while (iter.hasNext()) {
                Contact ct = iter.next();
                data[i][0] = ct.getLastName()+" "+ ct.getFirstName();
                data[i][1] = ct.getAdress();
                data[i][2] = ct.getCity();
                data[i][3] = ct.getPostalCode();
                data[i][4] = ct.getPhoneNumber();
                i++;
            }
            model.setDataVector(data, colnames);
        }
        else {
            model.setDataVector(null, colnames);
        }
    }
    private MyAdressBookWindow() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jScrollBar1 = new javax.swing.JScrollBar();
        AddContactButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        SortLNButton = new javax.swing.JButton();
        SortPS = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Adress", "City", "Postal Code", "Phone Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);

        AddContactButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Create.png"))); // NOI18N
        AddContactButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddContactButtonActionPerformed(evt);
            }
        });

        DeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Delete.png"))); // NOI18N
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        SortLNButton.setText("Sort by Last Name");
        SortLNButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortLNButtonActionPerformed(evt);
            }
        });

        SortPS.setText("Sort PC");
        SortPS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortPSActionPerformed(evt);
            }
        });

        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Back.png"))); // NOI18N
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        EditButton.setBackground(new java.awt.Color(255, 255, 255));
        EditButton.setFont(new java.awt.Font("Apple Braille", 0, 13)); // NOI18N
        EditButton.setText("Edit");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(EditButton)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addComponent(SortLNButton, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(208, 208, 208)
                                        .addComponent(SortPS)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BackButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AddContactButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteButton)
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BackButton)
                    .addComponent(AddContactButton)
                    .addComponent(DeleteButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SortPS)
                            .addComponent(SortLNButton)
                            .addComponent(EditButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        int index = Table.getSelectedRow();
        if (index == -1) {
            JOptionPane optionPane = new JOptionPane("Please select a contact", JOptionPane.ERROR_MESSAGE);    
            JDialog dialog = optionPane.createDialog("Failure");
            dialog.setAlwaysOnTop(true);
            dialog.setVisible(true);
        }
        String name = (String) Table.getValueAt(index, 0);
        AdressBook valid = adressBooks.FindAdressBookUserTitle(Username, Title);
        Contact toremove = valid.FindContactName(name);
        valid.RemoveContact(toremove);
        DefaultTableModel model2 = (DefaultTableModel) Table.getModel();
        model2.setRowCount(0);
        load();
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void SortLNButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortLNButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model2 = (DefaultTableModel) Table.getModel();
        model2.setRowCount(0);
        loadSortedByLastName();
        
    }//GEN-LAST:event_SortLNButtonActionPerformed
   
    private void AddContactButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddContactButtonActionPerformed
        // TODO add your handling code here:
        close();
        this.setVisible(false);
        AddContactWindow wind = new AddContactWindow(Username, Title);
        wind.setVisible(true);
        
    }//GEN-LAST:event_AddContactButtonActionPerformed

    private void SortPSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortPSActionPerformed
        // TODO add your handling code here
        DefaultTableModel model2 = (DefaultTableModel) Table.getModel();
        model2.setRowCount(0);
         loadSortedByPostalCode();
    }//GEN-LAST:event_SortPSActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        close();
        privatePlace pp = new privatePlace(Username);
        pp.setVisible(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        // TODO add your handling code here:
        int index = Table.getSelectedRow();
        if (index == -1) {
            JOptionPane optionPane = new JOptionPane("Please select a contact", JOptionPane.ERROR_MESSAGE);    
            JDialog dialog = optionPane.createDialog("Failure");
            dialog.setAlwaysOnTop(true);
            dialog.setVisible(true);
        }
        String name = (String) Table.getValueAt(index, 0);
        String adress = (String) Table.getValueAt(index,1);
        String city = (String) Table.getValueAt(index,2);
        int postalCode = (int) Table.getValueAt(index,3);
        String PhoneNumber = (String)Table.getValueAt(index,4);
        close();
        EditContactButton edi = new EditContactButton(Username, Title, name, adress, city, postalCode, PhoneNumber);
        edi.setVisible(true);
        /*AdressBook valid = adressBooks.FindAdressBookUserTitle(Username, Title);
        Contact ne = valid.FindContactName(name);
        ne.EditAdress(adress);
        ne.EditPhoneNumber(PhoneNumber);
        ne.EditPostalCode(postalCode);
        ne.EditCity(city);
        
        JOptionPane optionPane = new JOptionPane("Contact Info succesfully edited", JOptionPane.INFORMATION_MESSAGE);    
        JDialog dialog = optionPane.createDialog("Success");
        dialog.setAlwaysOnTop(true);
        dialog.setVisible(true);
        DefaultTableModel model2 = (DefaultTableModel) Table.getModel();
        model2.setRowCount(0);
        load();*/
    }//GEN-LAST:event_EditButtonActionPerformed
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        close();
    }  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyAdressBookWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyAdressBookWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyAdressBookWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyAdressBookWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyAdressBookWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddContactButton;
    private javax.swing.JButton BackButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JButton SortLNButton;
    private javax.swing.JButton SortPS;
    private javax.swing.JTable Table;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    private void close() {
        WindowEvent winClosing = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosing);
    }
}
